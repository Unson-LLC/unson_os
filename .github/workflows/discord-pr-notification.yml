name: Discord PR Notification

on:
  pull_request:
    types: [opened, closed]
  pull_request_review:
    types: [submitted]

jobs:
  notify-discord:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Generate PR Summary with AI
      id: summary
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        # PR情報を取得
        PR_TITLE="${{ github.event.pull_request.title }}"
        PR_BODY="${{ github.event.pull_request.body }}"
        PR_URL="${{ github.event.pull_request.html_url }}"
        PR_AUTHOR="${{ github.event.pull_request.user.login }}"
        PR_STATE="${{ github.event.pull_request.state }}"
        PR_MERGED="${{ github.event.pull_request.merged }}"
        
        # Pythonスクリプトで要約生成
        cat > generate_summary.py << 'EOF'
        import os
        import json
        import sys
        from anthropic import Anthropic
        
        pr_title = os.environ.get('PR_TITLE', '')
        pr_body = os.environ.get('PR_BODY', '')
        pr_merged = os.environ.get('PR_MERGED', 'false')
        event_name = os.environ.get('GITHUB_EVENT_NAME', '')
        
        # 簡潔な要約を生成（AIなしでも動作）
        if pr_merged == 'true':
            summary = f"✅ PR がマージされました！\n**{pr_title}**"
        elif event_name == 'pull_request' and os.environ.get('PR_STATE') == 'open':
            summary = f"🔄 新しいPRが作成されました\n**{pr_title}**"
        else:
            summary = pr_title
        
        # PR本文から主要な変更点を抽出（簡易版）
        if pr_body:
            lines = pr_body.split('\n')
            key_points = []
            for line in lines:
                if line.startswith('- ') or line.startswith('* '):
                    key_points.append(line)
                    if len(key_points) >= 3:
                        break
            
            if key_points:
                summary += "\n\n**主な変更:**\n" + '\n'.join(key_points[:3])
        
        print(summary)
        EOF
        
        export PR_TITLE PR_BODY PR_URL PR_AUTHOR PR_STATE PR_MERGED GITHUB_EVENT_NAME
        SUMMARY=$(python generate_summary.py)
        echo "SUMMARY<<EOF" >> $GITHUB_OUTPUT
        echo "$SUMMARY" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Send PR Opened Notification
      if: github.event.action == 'opened'
      uses: tsickert/discord-webhook@v5.3.0
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
        username: UnsonOS Bot
        avatar-url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        embed-title: "🔄 新しいPRが作成されました"
        embed-url: "${{ github.event.pull_request.html_url }}"
        embed-description: |
          ${{ steps.summary.outputs.SUMMARY }}
          
          **作成者:** ${{ github.event.pull_request.user.login }}
          **ブランチ:** `${{ github.event.pull_request.head.ref }}` → `${{ github.event.pull_request.base.ref }}`
          
          [PRを確認する](${{ github.event.pull_request.html_url }})
        embed-color: 3447003
        
    - name: Send PR Merged Notification
      if: github.event.pull_request.merged == true
      uses: tsickert/discord-webhook@v5.3.0
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
        username: UnsonOS Bot
        avatar-url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        embed-title: "✅ PRがマージされました！"
        embed-url: "${{ github.event.pull_request.html_url }}"
        embed-description: |
          ${{ steps.summary.outputs.SUMMARY }}
          
          **マージ者:** ${{ github.event.pull_request.merged_by.login }}
          **作成者:** ${{ github.event.pull_request.user.login }}
          
          [コミット履歴を見る](${{ github.event.pull_request.html_url }}/commits)
        embed-color: 2067276