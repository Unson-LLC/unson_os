{
  "name": "unson-os-lp",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "dev:apps": "./scripts/dev-apps.sh",
    "dev:portal": "cd apps/portal && npm run dev",
    "dev:mgmt": "cd apps/management-ui && npm run dev",
    "dev:lp-gen": "cd apps/lp-generator && npm run dev",
    "dev:convex": "./scripts/dev-convex.sh",
    "dev:next": "./scripts/dev-nextjs.sh",
    "build": "next build",
    "build:apps": "npm run build:portal && npm run build:mgmt",
    "build:portal": "cd apps/portal && npm run build",
    "build:mgmt": "cd apps/management-ui && npm run build",
    "start": "next start",
    "lint": "next lint",
    "lint:apps": "npm run lint:portal && npm run lint:mgmt",
    "lint:portal": "cd apps/portal && npm run lint",
    "lint:mgmt": "cd apps/management-ui && npm run lint",
    "deploy": "./scripts/deploy-vercel.sh",
    "deploy:portal": "cd apps/portal && vercel --prod",
    "deploy:mgmt": "cd apps/management-ui && vercel --prod",
    "type-check": "tsc --noEmit",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:component": "jest --testPathPattern=tests/unit/components",
    "test:hooks": "jest --testPathPattern=tests/unit/hooks",
    "test:integration": "npx tsx scripts/run-integration-tests.ts",
    "test:lp-validation": "npx vitest run tests/integration/lp-validation/",
    "test:api": "jest --testPathPattern=api",
    "test:pkg": "jest --config=jest-pkg.config.js",
    "test:pkg:watch": "jest --config=jest-pkg.config.js --watch",
    "test:pkg:coverage": "jest --config=jest-pkg.config.js --coverage",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:all": "npm run test:ci && npm run test:e2e",
    "setup:check": "node scripts/setup-check.js",
    "convex:dev": "convex dev",
    "ga4:create": "node scripts/create-single-ga4-property.js",
    "ga4:check": "node scripts/check-ga4-access.js",
    "clarity:setup": "node scripts/clarity-interactive-playwright.js",
    "secrets:check": "secretlint \"**/*\"",
    "secrets:fix": "secretlint \"**/*\" --fix",
    "prepare": "command -v git >/dev/null 2>&1 && git rev-parse --git-dir >/dev/null 2>&1 && npx husky install || true"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "@discordjs/builders": "^1.11.3",
    "@hookform/resolvers": "^3.3.2",
    "@react-email/components": "^0.3.2",
    "chart.js": "^4.5.0",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "convex": "^1.25.4",
    "discord.js": "^14.21.0",
    "framer-motion": "^10.18.0",
    "google-ads-api": "^20.0.1",
    "google-auth-library": "^9.0.0",
    "lucide-react": "^0.303.0",
    "next": "14.0.4",
    "openai": "^5.13.1",
    "playwright": "^1.54.2",
    "posthog-js": "^1.260.1",
    "posthog-node": "^5.7.0",
    "react": "^18",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^18",
    "react-hook-form": "^7.48.2",
    "resend": "^4.7.0",
    "tailwind-merge": "^2.2.0",
    "ulid": "^3.0.1",
    "zod": "^3.22.4",
    "zustand": "^4.4.7"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.8.2",
    "@microsoft/clarity-mcp-server": "^1.0.0",
    "@playwright/test": "^1.40.1",
    "@secretlint/secretlint-rule-preset-recommend": "^10.2.1",
    "@testing-library/jest-dom": "^6.1.5",
    "@testing-library/react": "^14.1.2",
    "@testing-library/user-event": "^14.5.1",
    "@types/jest": "^29.5.8",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@vitejs/plugin-react": "^5.0.1",
    "autoprefixer": "^10.0.1",
    "eslint": "^8",
    "eslint-config-next": "14.0.4",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jest-axe": "^8.0.0",
    "jest-environment-jsdom": "^29.7.0",
    "jsdom": "^26.1.0",
    "msw": "^2.0.11",
    "postcss": "^8",
    "prettier": "^3.1.1",
    "prettier-plugin-tailwindcss": "^0.5.9",
    "secretlint": "^10.2.1",
    "tailwindcss": "^3.3.0",
    "ts-jest": "^29.4.1",
    "typescript": "^5",
    "whatwg-fetch": "^3.6.20"
  },
  "workspaces": [
    "scripts/knowledge-base",
    "apps/*",
    "services/*/landing",
    "shared"
  ]
}
